services:
  database:
    image: postgres:17-alpine
    container_name: 'postgres-${APP_NAME}'
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-solarapp    
  pgbouncer:
    image: bitnami/pgbouncer:latest
    container_name: 'pgbouncer-${APP_NAME}'
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRESQL_HOST: database # host interno do Postgres no docker
      POSTGRESQL_PORT_NUMBER: 5432 # porta interna padr√£o do Postgres
      POSTGRESQL_DATABASE: ${DATABASE_NAME}
      PGBOUNCER_DATABASE: ${DATABASE_NAME}
      POSTGRESQL_USERNAME: ${DATABASE_USER}
      POSTGRESQL_PASSWORD: ${DATABASE_PASS}
      PGBOUNCER_LISTEN_PORT: 6432
      PGBOUNCER_POOL_MODE: transaction
      PGBOUNCER_MAX_CLIENT_CONN: 500
      PGBOUNCER_DEFAULT_POOL_SIZE: 50
    ports:
      - '${PGBOUNCER_PORT:-6432}:6432'
    depends_on:
      - database
    networks:
      - app-solarapp
  redis:
    image: redis:7.2-alpine
    container_name: 'redis-${APP_NAME}'
    restart: unless-stopped
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_data:/data
    command:
      ['redis-server', '--requirepass', '${REDIS_PASS}', '--appendonly', 'yes']
    networks:
      - app-solarapp
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  app-solarapp:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
